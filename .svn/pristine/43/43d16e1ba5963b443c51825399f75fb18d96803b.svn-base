{"version":3,"sources":["webpack:///./src/js/app.js","webpack:///./src/js/components/collapse.js","webpack:///./src/js/components/fullpage.js","webpack:///./src/js/components/modal.js","webpack:///./src/js/components/offcanvas.js"],"names":["Fullpage","Offcanvas","Collapse","Modal","document","querySelectorAll","forEach","item","addEventListener","fullpage_api","reBuild","fullpage","FullpageJS","menu","navigation","slidesNavigation","scrollOverflow","scrollingSpeed","scrollOverflowOptions","disablePointer","window","navigator","maxTouchPoints","msMaxTouchPoints","htmlVideo","target","action","getElementsByTagName","modalList","main","getElementById","e","classList","add","remove","bringMainToFront","videoInfos","length","info","console","log","navigationRight","navigationRightCanvas","bootstrap","nav","hide"],"mappings":";;;;uDAAA,0VAMAA,oBACAC,oBACAC,oBACAC,qB;;;;i0BCIeD,UAbE,WAEO,EAAIE,SAASC,iBAAiB,cACpCC,SAAQ,SAACC,GACvBA,EAAKC,iBAAiB,qBAAqB,WACzCC,aAAaC,aAEfH,EAAKC,iBAAiB,sBAAsB,WAC1CC,aAAaC,kB;;;;6DCRnB,4LAuBeC,UAdE,WACb,IAAIC,IAAW,YAAa,CACxBC,KAAM,cAENC,YAAY,EACZC,kBAAkB,EAClBC,gBAAgB,EAChBC,eAAgB,IAChBC,sBAAuB,CACnBC,iBAdC,iBAAkBC,QACtBC,UAAUC,eAAiB,GAC3BD,UAAUE,iBAAmB,Q;;;;i0BCNtC,IAwBMC,EAAY,YAAwB,IAArBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACvBF,EAAYC,EAAOE,qBAAqB,SAAS,GAEjDH,GAAWA,EAAUE,MAIZvB,UA/BD,WAGZ,IAAIyB,EAAY,EAAIxB,SAASC,iBAAiB,WACxCwB,EAAOzB,SAAS0B,eAAe,QAErCF,EAAUtB,SAAQ,SAACC,GACjBA,EAAKC,iBAAiB,iBAAiB,SAACuB,GACtCF,EAAKG,UAAUC,IAAI,gBACnBT,EAAU,CACRC,OAAQM,EAAEN,OACVC,OAAQ,YAGZnB,EAAKC,iBAAiB,iBAAiB,SAACuB,GACtCF,EAAKG,UAAUE,OAAO,gBACtBV,EAAU,CACRC,OAAQM,EAAEN,OACVC,OAAQ,kB;;;;84BChBhB,IAcMS,EAAmB,WACvB,IAAIC,EAAa,EAAIhC,SAASC,iBAAiB,uBAC3CwB,EAAOzB,SAAS0B,eAAe,QAE/BM,EAAWC,OAAS,GACtBD,EAAW9B,SAAQ,SAACgC,GAClBA,EAAK9B,iBAAiB,qBAAqB,SAAUuB,GACnDQ,QAAQC,IAAIT,EAAGO,GAEfT,EAAKG,UAAUC,IAAI,mBAErBK,EAAK9B,iBAAiB,qBAAqB,WACzCqB,EAAKG,UAAUE,OAAO,uBAOfjC,UAjCG,WAChB,IAAIwC,EAAkBrC,SAAS0B,eAAe,mBAC1CY,EAAwB,IAAIC,YAAoBF,GACnC,EAAIrC,SAASC,iBAAiB,sBAEpCC,SAAQ,SAACsC,GAClBA,EAAIpC,iBAAiB,SAAS,WAC5BkC,EAAsBG,aAG1BV,M","file":"main.bundle.js","sourcesContent":["import 'bootstrap';\nimport Fullpage from './components/fullpage';\nimport Offcanvas from './components/offcanvas';\nimport Collapse from './components/collapse';\nimport Modal from './components/modal';\n\nFullpage();\nOffcanvas();\nCollapse();\nModal();\n\n","const Collapse = () => {\n  // update fullpage height on accordion collapse\n  let collapsibleList = [...document.querySelectorAll('.collapse')];\n  collapsibleList.forEach((item) => {\n    item.addEventListener('shown.bs.collapse', () => {\n      fullpage_api.reBuild();\n    })\n    item.addEventListener('hidden.bs.collapse', () => {\n      fullpage_api.reBuild();\n    })\n  })\n}\n\nexport default Collapse","import \"fullpage.js/vendors/scrolloverflow\"\nimport FullpageJS from \"fullpage.js\"\n\nconst isTouchDevice = () => {\n    return (('ontouchstart' in window) ||\n        (navigator.maxTouchPoints > 0) ||\n        (navigator.msMaxTouchPoints > 0));\n}\n\nconst fullpage = () => {\n    new FullpageJS('#fullpage', {\n        menu: \"#navigation\",\n        // anchors: ['hero', 'accordion', 'slides'],\n        navigation: true,\n        slidesNavigation: true,\n        scrollOverflow: true,\n        scrollingSpeed: 1000,\n        scrollOverflowOptions: {\n            disablePointer: isTouchDevice() ? false : true\n        }\n    });\n}\n\nexport default fullpage  ","const Modal = () => {\n  // update fullpage height on accordion collapse\n  // sets higher z-index if modal is active\n  let modalList = [...document.querySelectorAll('.modal')];\n  const main = document.getElementById('main');\n\n  modalList.forEach((item) => {\n    item.addEventListener('show.bs.modal', (e) => {\n      main.classList.add('modal-active');\n      htmlVideo({\n        target: e.target,\n        action: \"play\"\n      });\n    })\n    item.addEventListener('hide.bs.modal', (e) => {\n      main.classList.remove('modal-active');\n      htmlVideo({\n        target: e.target,\n        action: \"pause\"\n      });\n    })\n  })\n}\n\nconst htmlVideo = ({ target, action }) => {\n  let htmlVideo = target.getElementsByTagName(\"video\")[0];\n\n  if (htmlVideo) htmlVideo[action]();\n}\n\n\nexport default Modal","import * as bootstrap from \"bootstrap\";\n\nconst Offcanvas = () => {\n  let navigationRight = document.getElementById('navigationRight');\n  let navigationRightCanvas = new bootstrap.Offcanvas(navigationRight)\n  let navigation = [...document.querySelectorAll('.navigation__link')];\n\n  navigation.forEach((nav) => {\n    nav.addEventListener(\"click\", () => {\n      navigationRightCanvas.hide();\n    })\n  })\n  bringMainToFront();\n}\n\n// sets higher z-index if offcanvas is active\nconst bringMainToFront = () => {\n  let videoInfos = [...document.querySelectorAll('.video-info-canvas')];\n  let main = document.getElementById('main');\n\n  if (videoInfos.length > 0) {\n    videoInfos.forEach((info) => {\n      info.addEventListener('show.bs.offcanvas', function (e) {\n        console.log(e, info);\n\n        main.classList.add('modal-active')\n      })\n      info.addEventListener('hide.bs.offcanvas', function () {\n        main.classList.remove('modal-active')\n      })\n    })\n  }\n\n}\n\nexport default Offcanvas  "],"sourceRoot":""}